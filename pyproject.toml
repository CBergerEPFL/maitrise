[project]
name = "ecg_quality_assesment"
version = "0.0.1"
description = ""
authors = []
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}
dependencies = [
    "ipywidgets>=8.0.2",
    "matplotlib>=3.6.0",
    "numpy>=1.23.3",
    "pandas>=1.5.0",
    "petastorm>=0.12.0",
    "pyspark>=3.3.0",
    "scikit-learn>=1.1.2",
    "scipy>=1.9.1",
    "py-ecg-detectors>=1.3.2",
    "hfda>=0.1.1",
    "datashader>=0.14.2",
    "desolver>=4.4.1",
    "pydmd>=0.4.0.post2209",
    "pyts>=0.12.0",
    "dsatools>=0.1.93",
    "hurst>=0.0.5",
    "tdqm>=0.0.1",
    "tqdm>=4.64.1",
    "seaborn>=0.12.0",
    "neurokit2>=0.2.1",
    "pyRQA>=8.0.0",
    "plotly>=5.10.0",
    "ipympl>=0.9.2",
    "numba>=0.56.3",
    "biosppy>=1.0.0",
    "mogptk>=0.3.1",
    "imbalanced-learn>=0.9.1",
    "imblearn>=0.0",
    "statsmodels>=0.13.5",
    "ipykernel>=6.17.1",
    "netCDF4>=1.6.2",
    "optuna>=2.10.1",
    "lightgbm>=3.3.3",
    "mlxtend>=0.21.0",
]
[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool.pdm.build]
package-dir = "src"


[tool.pdm.scripts]
clean_project = {cmd = "rm -rf __pypackages__ build dist"}
post_install = "pre-commit install"
# dev_entrypoint = {call = "src_dev.ecg_quality_assesment_dev:dev_test_function"}

[tool.pdm.dev-dependencies]
dev = [
    "pre-commit>=2.20.0",
]
